export default class CustomShape {
    constructor(index: any, gl: any, opts: any);
    index: any;
    gl: any;
    positions: Float32Array;
    colors: Float32Array;
    uvs: Float32Array;
    borderPositions: Float32Array;
    texsizeX: any;
    texsizeY: any;
    mesh_width: any;
    mesh_height: any;
    aspectx: any;
    aspecty: any;
    invAspectx: number;
    invAspecty: number;
    positionVertexBuf: any;
    colorVertexBuf: any;
    uvVertexBuf: any;
    borderPositionVertexBuf: any;
    floatPrecision: string;
    mainSampler: any;
    updateGlobals(opts: any): void;
    createShader(): void;
    shaderProgram: any;
    aPosLocation: any;
    aColorLocation: any;
    aUvLocation: any;
    texturedLoc: any;
    textureLoc: any;
    createBorderShader(): void;
    borderShaderProgram: any;
    aBorderPosLoc: any;
    uBorderColorLoc: any;
    thickOffsetLoc: any;
    drawCustomShape(blendProgress: any, globalVars: any, presetEquationRunner: any, shapeEqs: any, prevTexture: any): void;
    borderColor: any[];
    mdVSShapeFrame: any;
    setupShapeBuffers(wrap: any): void;
    drawCustomShapeInstance(prevTexture: any, sides: any, isTextured: any, hasBorder: any, isBorderThick: any, isAdditive: any): void;
}
